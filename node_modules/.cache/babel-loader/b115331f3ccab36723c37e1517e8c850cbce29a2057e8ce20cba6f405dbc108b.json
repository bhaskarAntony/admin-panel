{"ast":null,"code":"// apiService.js\nimport axios from 'axios';\nconst apiUrl = 'https://your-api-endpoint.com'; // Replace with your actual API endpoint\n\nconst apiService = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    'Content-Type': 'application/json'\n    // Include any other headers you need, such as authorization headers\n  }\n});\n\nexport const uploadDataToApi = async data => {\n  try {\n    const response = await apiService.post('/upload-data', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error uploading data to API:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","apiService","create","baseURL","headers","uploadDataToApi","data","response","post","error","console","message"],"sources":["D:/BE PRACTICAL/Full stack/Frontend/React_projects/first/src/Data/apiService.js"],"sourcesContent":["// apiService.js\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = 'https://your-api-endpoint.com'; // Replace with your actual API endpoint\r\n\r\nconst apiService = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // Include any other headers you need, such as authorization headers\r\n  },\r\n});\r\n\r\nexport const uploadDataToApi = async (data) => {\r\n  try {\r\n    const response = await apiService.post('/upload-data', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error uploading data to API:', error.message);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,+BAA+B,CAAC,CAAC;;AAEhD,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAEH,MAAM;EACfI,OAAO,EAAE;IACP,cAAc,EAAE;IAChB;EACF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAACO,IAAI,CAAC,cAAc,EAAEF,IAAI,CAAC;IAC5D,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5D,MAAMF,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}