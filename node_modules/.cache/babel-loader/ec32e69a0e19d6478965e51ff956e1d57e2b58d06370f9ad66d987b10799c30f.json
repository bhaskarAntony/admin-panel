{"ast":null,"code":"var _jsxFileName = \"D:\\\\BE PRACTICAL\\\\Full stack\\\\Frontend\\\\React_projects\\\\first\\\\src\\\\components\\\\imageStore\\\\AllImages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { images } from '../../Data/DataFetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllImages() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [allImages, setAllImages] = useState([]);\n  useEffect(() => {\n    images.then(data => {\n      setAllImages(data);\n      setLoading(false);\n    }).catch(error => console.error('Error fetching images:', error));\n  }, []);\n  const getFileExtension = filename => {\n    return filename.split('.').pop().toLowerCase();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: allImages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 col-md-2 col-lg-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-2 mb-2\",\n          children: [['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(getFileExtension(item.image.toLowerCase())) ?\n          /*#__PURE__*/\n          // Render image style\n          _jsxDEV(\"img\", {\n            src: `https://bepractical.s3.us-east-2.amazonaws.com/${item.image}`,\n            alt: \"\",\n            className: \"w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          // Render file style\n          _jsxDEV(\"div\", {\n            className: \"file-style\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bi bi-folder-fill fs-1 text-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"d-block\",\n                children: item.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"bg-primary rounded-1 text-white p-1 text-center\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(AllImages, \"POMGCokKmVyy/kPuqzh5aCj+isc=\");\n_c = AllImages;\nexport default AllImages;\nvar _c;\n$RefreshReg$(_c, \"AllImages\");","map":{"version":3,"names":["React","useEffect","useState","images","jsxDEV","_jsxDEV","AllImages","_s","loading","setLoading","allImages","setAllImages","then","data","catch","error","console","getFileExtension","filename","split","pop","toLowerCase","className","children","map","item","index","includes","image","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["D:/BE PRACTICAL/Full stack/Frontend/React_projects/first/src/components/imageStore/AllImages.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { images } from '../../Data/DataFetcher';\r\n\r\nfunction AllImages() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [allImages, setAllImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    images\r\n      .then((data) => {\r\n        setAllImages(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => console.error('Error fetching images:', error));\r\n  }, []);\r\n\r\n  const getFileExtension = (filename) => {\r\n    return filename.split('.').pop().toLowerCase();\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        {allImages.map((item, index) => (\r\n          <div className='col-4 col-md-2 col-lg-2' key={index}>\r\n            <div className='card p-2 mb-2'>\r\n              {['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(getFileExtension(item.image.toLowerCase())) ? (\r\n                // Render image style\r\n                <img src={`https://bepractical.s3.us-east-2.amazonaws.com/${item.image}`} alt='' className='w-100' />\r\n              ) : (\r\n                // Render file style\r\n                <div className='file-style'>\r\n                  {/* Add styles or content for the file */}\r\n                 \r\n                  <div className=\"card\">\r\n                  <i class=\"bi bi-folder-fill fs-1 text-warning\"></i>\r\n                  <span className='d-block'>{item.image}</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <small className='bg-primary rounded-1 text-white p-1 text-center'>Copy</small>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllImages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}